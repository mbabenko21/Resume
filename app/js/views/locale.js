// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['text!templates/locale.html', 'collections/locales'], function(template, LocaleCollection) {
    var LocaleView, _ref;
    return LocaleView = (function(_super) {
      __extends(LocaleView, _super);

      function LocaleView() {
        _ref = LocaleView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      LocaleView.prototype.el = "#locale-container";

      LocaleView.prototype.template = _.template(template);

      LocaleView.prototype.events = {
        "click": "change"
      };

      LocaleView.prototype.initialize = function(app) {
        this.collection = new LocaleCollection(app.locales);
        return this.render;
      };

      LocaleView.prototype.render = function() {
        var that;
        that = this;
        return _.each(this.collection.models, function(locale) {
          return that.$el.append(that.template(locale.toJSON()));
        });
      };

      LocaleView.prototype.change = function(event) {
        this.clear();
        return $(event.target).addClass("circle").addClass("text-danger");
      };

      LocaleView.prototype.clear = function() {
        return this.$el.find(".circle").removeClass("circle").removeClass("text-danger");
      };

      return LocaleView;

    })(Backbone.View);
  });

}).call(this);
