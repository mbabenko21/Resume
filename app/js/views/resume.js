// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["collections/skills", "views/skill"], function(SkillsCollection, SkillView) {
    var ResumeView, _ref;
    return ResumeView = (function(_super) {
      __extends(ResumeView, _super);

      function ResumeView() {
        _ref = ResumeView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      ResumeView.prototype.el = $(".resume-container");

      ResumeView.prototype.initialize = function(app) {
        this.resume = app;
        this.collection = new SkillsCollection(app.skills);
        return this.render;
      };

      ResumeView.prototype.render = function() {
        var that;
        that = this;
        _.each(this.collection.models, function(item) {
          return that.renderSkill(item);
        }, this);
        this.resume.controller.navigate("!/" + this.collection.at(0).toJSON().link);
        this.$el.find(".skill").first().click();
        return this;
      };

      ResumeView.prototype.renderSkill = function(skill) {
        var skillView, that;
        that = this;
        skillView = new SkillView({
          model: skill,
          router: that.resume.controller
        });
        return this.$el.append(skillView.render().el);
      };

      return ResumeView;

    })(Backbone.View);
  });

}).call(this);
